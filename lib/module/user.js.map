{"version":3,"sources":["user.ts"],"names":["ChatKittySucceededResult","GetUsersSucceededResult","constructor","paginator","GetUserSucceededResult","user","GetUserIsChannelMemberSucceededResult","isMember","BlockUserSucceededResult"],"mappings":"AAGA,SAGEA,wBAHF,QAIO,UAJP;AAoDA,OAAO,MAAMC,uBAAN,SAAsCD,wBAAtC,CAA+D;AACpEE,EAAAA,WAAW,CAAQC,SAAR,EAA6C;AACtD;AADsD,SAArCA,SAAqC,GAArCA,SAAqC;AAEvD;;AAHmE;AAWtE,OAAO,MAAMC,sBAAN,SAAqCJ,wBAArC,CAA8D;AACnEE,EAAAA,WAAW,CAAQG,IAAR,EAAoB;AAC7B;AAD6B,SAAZA,IAAY,GAAZA,IAAY;AAE9B;;AAHkE;AAgBrE,OAAO,MAAMC,qCAAN,SAAoDN,wBAApD,CAA6E;AAClFE,EAAAA,WAAW,CAAQK,QAAR,EAA2B;AACpC;AADoC,SAAnBA,QAAmB,GAAnBA,QAAmB;AAErC;;AAHiF;AAepF,OAAO,MAAMC,wBAAN,SAAuCR,wBAAvC,CAAgE;AACrEE,EAAAA,WAAW,CAAQG,IAAR,EAAoB;AAC7B;AAD6B,SAAZA,IAAY,GAAZA,IAAY;AAE9B;;AAHoE","sourcesContent":["import { Channel } from './channel';\nimport { ChatKittyModelReference } from './model';\nimport { ChatKittyPaginator } from './pagination';\nimport {\n  ChatKittyFailedResult,\n  ChatKittyResult,\n  ChatKittySucceededResult,\n} from './result';\n\nexport interface BaseUser {\n  id: number;\n  name: string;\n  displayName: string;\n  displayPictureUrl: string;\n  isGuest: boolean;\n  presence: UserPresence;\n  callStatus: string;\n  properties: unknown;\n}\n\nexport declare class UserPresence {\n  status: string;\n  online: boolean;\n}\n\nexport type User = BaseUser & {\n  _relays: UserRelays;\n};\n\nexport declare class UserRelays {\n  self: string;\n  channelMember: string;\n}\n\nexport type ChatKittyUserReference =\n  | ChatKittyModelReference\n  | {\n      username: string;\n    };\n\nexport declare class GetUsersRequest {\n  filter?: GetUsersFilter;\n}\n\nexport declare class GetUsersFilter {\n  name?: string;\n  displayName?: string;\n  online?: boolean;\n}\n\nexport type GetUsersResult =\n  | ChatKittyResult<GetUsersSucceededResult>\n  | GetUsersSucceededResult\n  | ChatKittyFailedResult;\n\nexport class GetUsersSucceededResult extends ChatKittySucceededResult {\n  constructor(public paginator: ChatKittyPaginator<User>) {\n    super();\n  }\n}\n\nexport type GetUserResult =\n  | ChatKittyResult<GetUserSucceededResult>\n  | GetUserSucceededResult\n  | ChatKittyFailedResult;\n\nexport class GetUserSucceededResult extends ChatKittySucceededResult {\n  constructor(public user: User) {\n    super();\n  }\n}\n\nexport declare class GetUserIsChannelMemberRequest {\n  user: User;\n  channel: Channel;\n}\n\nexport type GetUserIsChannelMemberResult =\n  | ChatKittyResult<GetUserIsChannelMemberSucceededResult>\n  | GetUserIsChannelMemberSucceededResult\n  | ChatKittyFailedResult;\n\nexport class GetUserIsChannelMemberSucceededResult extends ChatKittySucceededResult {\n  constructor(public isMember: boolean) {\n    super();\n  }\n}\n\nexport declare class BlockUserRequest {\n  user: User;\n}\n\nexport type BlockUserResult =\n  | ChatKittyResult<BlockUserSucceededResult>\n  | BlockUserSucceededResult\n  | ChatKittyFailedResult;\n\nexport class BlockUserSucceededResult extends ChatKittySucceededResult {\n  constructor(public user: User) {\n    super();\n  }\n}\n"]}