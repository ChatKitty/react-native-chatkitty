{"version":3,"sources":["thread.ts"],"names":["CreatedThreadResult","ChatKittySucceededResult","constructor","thread","GetThreadsSucceededResult","paginator","GetThreadChannelSucceededResult","channel","GetThreadMessageSucceededResult","message","ReadThreadSucceededResult"],"mappings":";;;;;;;AAGA;;AAmDO,MAAMA,mBAAN,SAAkCC,gCAAlC,CAA2D;AAChEC,EAAAA,WAAW,CAAQC,MAAR,EAAwB;AACjC;AADiC,SAAhBA,MAAgB,GAAhBA,MAAgB;AAElC;;AAH+D;;;;AAwB3D,MAAMC,yBAAN,SAAwCH,gCAAxC,CAAiE;AACtEC,EAAAA,WAAW,CAAQG,SAAR,EAA+C;AACxD;AADwD,SAAvCA,SAAuC,GAAvCA,SAAuC;AAEzD;;AAHqE;;;;AAejE,MAAMC,+BAAN,SAA8CL,gCAA9C,CAAuE;AAC5EC,EAAAA,WAAW,CAAQK,OAAR,EAA0B;AACnC;AADmC,SAAlBA,OAAkB,GAAlBA,OAAkB;AAEpC;;AAH2E;;;;AAevE,MAAMC,+BAAN,SAA8CP,gCAA9C,CAAuE;AAC5EC,EAAAA,WAAW,CAAQO,OAAR,EAA0B;AACnC;AADmC,SAAlBA,OAAkB,GAAlBA,OAAkB;AAEpC;;AAH2E;;;;AAevE,MAAMC,yBAAN,SAAwCT,gCAAxC,CAAiE;AACtEC,EAAAA,WAAW,CAAQC,MAAR,EAAwB;AACjC;AADiC,SAAhBA,MAAgB,GAAhBA,MAAgB;AAElC;;AAHqE","sourcesContent":["import { Channel } from './channel';\nimport { Message } from './message';\nimport { ChatKittyPaginator } from './pagination';\nimport {\n  ChatKittyFailedResult,\n  ChatKittyResult,\n  ChatKittySucceededResult\n} from './result';\n\nexport declare class Thread {\n  id: string;\n  type: string;\n  name?: string;\n  properties: unknown;\n  createdTime: string;\n  _relays: ThreadRelays;\n  _topics: ThreadTopics;\n  _actions: ThreadActions;\n  _streams: ThreadStreams;\n}\n\nexport declare class ThreadRelays {\n  channel: string;\n  message: string;\n}\n\nexport declare class ThreadTopics {\n  self: string;\n  messages: string;\n  keystrokes: string;\n  typing: string;\n}\n\nexport declare class ThreadActions {\n  message: string;\n  keystrokes: string;\n  read: string;\n}\n\nexport declare class ThreadStreams {\n  messages: string;\n}\n\nexport declare class CreateThreadRequest {\n  channel: Channel;\n  name: string;\n  properties?: unknown;\n}\n\nexport type CreateThreadResult =\n  | ChatKittyResult<CreatedThreadResult>\n  | CreatedThreadResult\n  | ChatKittyFailedResult;\n\nexport class CreatedThreadResult extends ChatKittySucceededResult {\n  constructor(public thread: Thread) {\n    super();\n  }\n}\n\nexport type GetThreadsRequest =\n  GetChannelThreadsRequest\n\nexport declare class GetChannelThreadsRequest {\n  channel: Channel;\n  filter?: GetChannelThreadsFilter;\n}\n\nexport declare class GetChannelThreadsFilter {\n  includeMainThread?: boolean;\n  standalone?: boolean;\n}\n\nexport type GetThreadsResult =\n  | ChatKittyResult<GetThreadsSucceededResult>\n  | GetThreadsSucceededResult\n  | ChatKittyFailedResult;\n\nexport class GetThreadsSucceededResult extends ChatKittySucceededResult {\n  constructor(public paginator: ChatKittyPaginator<Thread>) {\n    super();\n  }\n}\n\nexport declare class GetThreadChannelRequest {\n  thread: Thread\n}\n\nexport type GetThreadChannelResult =\n  | ChatKittyResult<GetThreadChannelSucceededResult>\n  | GetThreadChannelSucceededResult\n  | ChatKittyFailedResult;\n\nexport class GetThreadChannelSucceededResult extends ChatKittySucceededResult {\n  constructor(public channel: Channel) {\n    super();\n  }\n}\n\nexport declare class GetThreadMessageRequest {\n  thread: Thread\n}\n\nexport type GetThreadMessageResult =\n  | ChatKittyResult<GetThreadMessageSucceededResult>\n  | GetThreadMessageSucceededResult\n  | ChatKittyFailedResult;\n\nexport class GetThreadMessageSucceededResult extends ChatKittySucceededResult {\n  constructor(public message: Message) {\n    super();\n  }\n}\n\nexport declare class ReadThreadRequest {\n  thread: Thread;\n}\n\nexport type ReadThreadResult =\n  | ChatKittyResult<ReadThreadSucceededResult>\n  | ReadThreadSucceededResult\n  | ChatKittyFailedResult;\n\nexport class ReadThreadSucceededResult extends ChatKittySucceededResult {\n  constructor(public thread: Thread) {\n    super();\n  }\n}\n\n\n"]}