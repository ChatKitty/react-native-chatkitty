{"version":3,"sources":["result.ts"],"names":["ChatKittySucceededResult","ChatKittyCancelledResult","ChatKittyFailedResult","constructor","error","GetCountSucceedResult","count","succeeded","result","failed","cancelled"],"mappings":";;;;;;;;;;;;AAEA;AAOO,MAAeA,wBAAf,CAAwC;AAAA;AAAA,uCACjC,IADiC;;AAAA,uCAEjC,KAFiC;;AAAA,oCAGpC,KAHoC;AAAA;;AAAA;;;;AAMxC,MAAeC,wBAAf,CAAwC;AAAA;AAAA,uCACjC,KADiC;;AAAA,uCAEjC,IAFiC;;AAAA,oCAGpC,KAHoC;AAAA;;AAAA;;;;AAMxC,MAAMC,qBAAN,CAA4B;AAKjCC,EAAAA,WAAW,CAAQC,KAAR,EAA+B;AAAA,SAAvBA,KAAuB,GAAvBA,KAAuB;;AAAA,uCAJ9B,KAI8B;;AAAA,uCAH9B,KAG8B;;AAAA,oCAFjC,IAEiC;AAAE;;AALX;;;;AAa5B,MAAMC,qBAAN,SAAoCL,wBAApC,CAA6D;AAClEG,EAAAA,WAAW,CAAQG,KAAR,EAAuB;AAChC;AADgC,SAAfA,KAAe,GAAfA,KAAe;AAEjC;;AAHiE;;;;AAM7D,SAASC,SAAT,CACLC,MADK,EAEQ;AACb,SAAOA,MAAM,CAACD,SAAd;AACD;;AAEM,SAASE,MAAT,CACLD,MADK,EAEQ;AACb,SAAOA,MAAM,CAACC,MAAd;AACD;;AAEM,SAASC,SAAT,CACLF,MADK,EAEQ;AACb,SAAOA,MAAM,CAACE,SAAd;AACD","sourcesContent":["import { ChatKittyError } from './error';\n\n// @ts-ignore\nexport interface ChatKittyResult<S extends ChatKittySucceededResult> {\n  succeeded: boolean;\n  cancelled: boolean;\n  failed: boolean;\n}\n\nexport abstract class ChatKittySucceededResult {\n  succeeded = true;\n  cancelled = false;\n  failed = false;\n}\n\nexport abstract class ChatKittyCancelledResult {\n  succeeded = false;\n  cancelled = true;\n  failed = false;\n}\n\nexport class ChatKittyFailedResult {\n  succeeded = false;\n  cancelled = false;\n  failed = true;\n\n  constructor(public error: ChatKittyError) {}\n}\n\nexport type GetCountResult =\n  | ChatKittyResult<GetCountSucceedResult>\n  | GetCountSucceedResult\n  | ChatKittyFailedResult;\n\nexport class GetCountSucceedResult extends ChatKittySucceededResult {\n  constructor(public count: number) {\n    super();\n  }\n}\n\nexport function succeeded<R extends ChatKittySucceededResult>(\n  result: ChatKittyResult<R>\n): result is R {\n  return result.succeeded;\n}\n\nexport function failed<R extends ChatKittyFailedResult>(\n  result: ChatKittyResult<never>\n): result is R {\n  return result.failed;\n}\n\nexport function cancelled<R extends ChatKittyCancelledResult>(\n  result: ChatKittyResult<never>\n): result is R {\n  return result.cancelled;\n}\n"]}