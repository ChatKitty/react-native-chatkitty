{"version":3,"sources":["call-signal.ts"],"names":["isCreateOfferCallSignal","signal","type","isAnswerOfferCallSignal","isAddCandidateCallSignal","isSendDescriptionCallSignal","isDisconnectPeerCallSignal","CreatedCallSignalResult","ChatKittySucceededResult","constructor","createdCallSignal","result","undefined"],"mappings":";;;;;;;;;;;;;AAMA;;AAmCO,SAASA,uBAAT,CACLC,MADK,EAE4B;AACjC,SAAOA,MAAM,CAACC,IAAP,KAAgB,cAAvB;AACD;;AAEM,SAASC,uBAAT,CACLF,MADK,EAE4B;AACjC,SAAOA,MAAM,CAACC,IAAP,KAAgB,cAAvB;AACD;;AAEM,SAASE,wBAAT,CACLH,MADK,EAE6B;AAClC,SAAOA,MAAM,CAACC,IAAP,KAAgB,eAAvB;AACD;;AAEM,SAASG,2BAAT,CACLJ,MADK,EAEgC;AACrC,SAAOA,MAAM,CAACC,IAAP,KAAgB,kBAAvB;AACD;;AAEM,SAASI,0BAAT,CACLL,MADK,EAE+B;AACpC,SAAOA,MAAM,CAACC,IAAP,KAAgB,iBAAvB;AACD;;AAYM,MAAMK,uBAAN,SAAsCC,gCAAtC,CAA+D;AACpEC,EAAAA,WAAW,CAAQR,MAAR,EAA4B;AACrC;AADqC,SAApBA,MAAoB,GAApBA,MAAoB;AAEtC;;AAHmE;;;;AAM/D,SAASS,iBAAT,CACLC,MADK,EAE8B;AACnC,SAAQA,MAAD,CAAoCV,MAApC,KAA+CW,SAAtD;AACD","sourcesContent":["import {\n  RTCIceCandidateType,\n  RTCSessionDescriptionType,\n} from 'react-native-webrtc';\nimport { User } from './user';\nimport { ChatKittyModelReference } from './model';\nimport { ChatKittyFailedResult, ChatKittySucceededResult } from './result';\n\nexport type CallSignal =\n  | CreateOfferCallSignal\n  | AnswerOfferCallSignal\n  | AddCandidateCallSignal\n  | SendDescriptionCallSignal\n  | DisconnectPeerCallSignal;\n\ntype CallSignalProperties = {\n  type: string;\n  peer: User;\n  createdTime: string;\n};\n\ntype SystemCallSignal = CallSignalProperties;\n\ntype ClientCallSignal = {\n  payload: unknown;\n} & CallSignalProperties;\n\nexport type CreateOfferCallSignal = SystemCallSignal;\n\nexport type AnswerOfferCallSignal = SystemCallSignal;\n\nexport type AddCandidateCallSignal = {\n  payload: RTCIceCandidateType;\n} & ClientCallSignal;\n\nexport type SendDescriptionCallSignal = {\n  payload: RTCSessionDescriptionType;\n} & ClientCallSignal;\n\nexport type DisconnectPeerCallSignal = SystemCallSignal;\n\nexport function isCreateOfferCallSignal(\n  signal: CallSignal\n): signal is CreateOfferCallSignal {\n  return signal.type === 'CREATE_OFFER';\n}\n\nexport function isAnswerOfferCallSignal(\n  signal: CallSignal\n): signal is AnswerOfferCallSignal {\n  return signal.type === 'ANSWER_OFFER';\n}\n\nexport function isAddCandidateCallSignal(\n  signal: CallSignal\n): signal is AddCandidateCallSignal {\n  return signal.type === 'ADD_CANDIDATE';\n}\n\nexport function isSendDescriptionCallSignal(\n  signal: CallSignal\n): signal is SendDescriptionCallSignal {\n  return signal.type === 'SEND_DESCRIPTION';\n}\n\nexport function isDisconnectPeerCallSignal(\n  signal: CallSignal\n): signal is DisconnectPeerCallSignal {\n  return signal.type === 'DISCONNECT_PEER';\n}\n\nexport interface CreateCallSignalRequest {\n  type: string;\n  peer: ChatKittyModelReference;\n  payload: RTCIceCandidateType | RTCSessionDescriptionType;\n}\n\nexport type CreateCallSignalResult =\n  | CreatedCallSignalResult\n  | ChatKittyFailedResult;\n\nexport class CreatedCallSignalResult extends ChatKittySucceededResult {\n  constructor(public signal: CallSignal) {\n    super();\n  }\n}\n\nexport function createdCallSignal(\n  result: CreateCallSignalResult\n): result is CreatedCallSignalResult {\n  return (result as CreatedCallSignalResult).signal !== undefined;\n}\n"]}